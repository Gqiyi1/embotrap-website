/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 public/embotrap.gltf --transform --types 
Files: public/embotrap.gltf [20MB] > embotrap-transformed.glb [1.26MB] (94%)
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, PerspectiveCamera } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    curve_object1: THREE.Mesh
  }
  materials: {}
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Embotrap(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/embotrap-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.curve_object1.geometry} material={nodes.curve_object1.material}>
        <meshPhysicalMaterial metalness={1} roughness={0.1}/>
      </mesh>
    </group>
  )
}

useGLTF.preload('/models/embotrap-transformed.glb')
